{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/orders/items/items.component.ts","./src/app/orders/items/items.component.html","./src/app/orders/order-detail/order-detail.component.ts","./src/app/orders/order-detail/order-detail.component.html","./src/app/orders/order/order.component.ts","./src/app/orders/order/order.component.html","./src/app/orders/orders.component.ts","./src/app/orders/orders.component.html","./src/app/shared/admin-guard.service.ts","./src/app/shared/auth-guard.service.ts","./src/app/shared/item.service.ts","./src/app/shared/order.service.ts","./src/app/shared/user.service.ts","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/sign-up/sign-up.component.ts","./src/app/user/sign-up/sign-up.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderComponent } from './orders/order/order.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { LoginComponent } from './user/login/login.component';\n\nimport { AuthGuardService } from \"./shared/auth-guard.service\";\nimport { AdminGuardService } from './shared/admin-guard.service';\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'orders', pathMatch:'full', },\n  {path:'orders', component:OrdersComponent, canActivate:[AuthGuardService]},\n  {path:'order', canActivate:[AuthGuardService] ,children:[\n    {path:'', component:OrderComponent},\n    {path:'edit/:id', component:OrderComponent}\n  ]},\n  {path:'signup', component:SignUpComponent, canActivate:[AdminGuardService]},\n  {path:'login', component:LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Restaurant';\n\n}\n","\n<router-outlet></router-outlet>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { ItemsComponent } from './orders/items/items.component';\nimport { OrderService } from './shared/order.service';\n\nimport { FormsModule, FormControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserComponent } from './user/user.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { UserService } from './shared/user.service';\nimport { ItemService } from './shared/item.service';\n\nimport { AuthGuardService } from \"./shared/auth-guard.service\";\nimport { AdminGuardService } from \"./shared/admin-guard.service\";\nimport { OrderDetailComponent } from './orders/order-detail/order-detail.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    OrderComponent,\n    ItemsComponent,\n    UserComponent,\n    SignUpComponent,\n    LoginComponent,\n    OrderDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpClientModule,\n    \n    \n  ],\n  entryComponents: [\n    ItemsComponent\n  ],\n  providers: [\n    OrderService,\n    UserService,\n    ItemService,\n    AuthGuardService,\n    AdminGuardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { OrderItem } from 'src/app/shared/order-item';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { Item } from 'src/app/shared/item';\nimport { NgForm } from '@angular/forms';\nimport { OrderService } from 'src/app/shared/order.service';\n\n\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styles: [\n  ]\n})\nexport class ItemsComponent implements OnInit {\n\n  formData: OrderItem;\n  itemList: Item[];\n  isValid = true;\n\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<ItemsComponent>,\n    private itemService: ItemService,\n    private orderService: OrderService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.itemService.getItemList().then(res => this.itemList = res as Item[])\n \n    if(this.data.orderItemIndex == null){\n      this.formData = {\n        id: null,\n        orderId: this.orderService.formData.orderNo,\n        itemId: 0,\n        itemName: '',\n        price: 0,\n        amount: 1,\n        total: 0\n      }\n    }\n    else{\n      this.formData = Object.assign( {}, this.orderService.orderItems[this.data.orderItemIndex]);\n    }\n  }\n\n  updatePrice(ctrl){\n    if(ctrl.selectedIndex == 0){\n      this.formData.price = 0;\n      this.formData.itemName = \"\";\n    }\n    else{\n      this.formData.price = this.itemList[ctrl.selectedIndex-1].price;\n      this.formData.itemName = this.itemList[ctrl.selectedIndex-1].name;\n    }\n    this.updateTotal();\n  }\n\n  updateTotal(){\n    this.formData.total = this.formData.amount * parseFloat((this.formData.price).toFixed(2));\n  }\n\n  onSubmit(form:NgForm){\n    if(this.validateForm(form.value)){\n\n      if(this.data.orderItemIndex == null){\n        this.orderService.orderItems.push(form.value);\n      }\n      else{\n        this.orderService.orderItems[this.data.orderItemIndex] = form.value;\n      }\n      \n      this.dialogRef.close();\n    }\n    \n  }\n\n  validateForm(formData:OrderItem){\n    this.isValid = true;\n    if(formData.itemId == 0 || formData.amount == 0){\n      this.isValid = false;\n    }\n    return this.isValid;\n    \n  }\n   \n}\n","\n<form autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n\n\n    <!-- hidden inputs for implicit data -->\n    <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n    <input type=\"hidden\" name=\"itemName\" #itemName=\"ngModel\" [(ngModel)]=\"formData.itemName\">\n    <input type=\"hidden\" name=\"orderId\" #orderId=\"ngModel\" [(ngModel)]=\"formData.orderId\">\n\n    <div class=\"form-group\">\n        <label for=\"item\">Item</label>\n        <select name=\"itemId\" #itemId=\"ngModel\" [(ngModel)]=\"formData.itemId\" class=\"form-control\" (change)=\"updatePrice($event.target)\"\n        [class.is-invalid]=\"!isValid && formData.itemId == 0\">\n            <option value=\"0\">--Selecciona un item--</option>\n            <option *ngFor=\"let item of itemList\" value=\"{{item.id}}\">{{item.name}}</option>\n        </select>\n    </div>\n\n    <div class=\"row form-group col-md-6\">\n         <label class=\"text-justify text-center\" for=\"price\">Precio</label>\n        <div class=\"input-group\">\n            <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n            <input name=\"price\" #price=\"ngModel\" [(ngModel)]=\"formData.price\" class=\"form-control\" readonly>\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"amount\">Cantidad</label>\n            <input type=\"number\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"formData.amount\" class=\"form-control\" \n            (change)=\"updateTotal()\" [class.is-invalid]=\"!isValid && formData.amount == 0\">\n        </div>\n\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"total\">Total</label>\n            <div class=\"input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"total\" #total=\"ngModel\" [(ngModel)]=\"formData.total\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <button type=\"button\" [mat-dialog-close] class=\"btn btn-danger float-left\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success float-right\"><b>Aceptar</b></button>\n    </div>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nimport { OrderService } from 'src/app/shared/order.service';\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n\n  itemList;\n  total;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n  public dialogRef: MatDialogRef<OrderDetailComponent>,\n  private service: OrderService) { }\n\n  ngOnInit(): void {\n  \n      this.service.getOrderItems(this.data.ordernumber).subscribe((x: any) =>{\n        this.itemList = x;\n        this.total = this.itemList.reduce(function(prev, cur) {\n          return prev + cur.itemTotal;\n        }, 0);\n      })\n    \n    \n  }\n  \n  \n      \n    \n  \n  \n}\n","<div class=\"container\">\n    <table class=\"table\">\n        <thead>\n            <th>#</th>\n            <th>Item</th>\n            <th>Precio</th>\n            <th>Total</th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of itemList\"> \n                <td>{{ item.itemAmount }} </td>\n                <td>{{ item.itemName }}</td>\n                <td>{{ item.itemPrice }}</td>\n                <td> {{item.itemTotal}}  </td>\n            </tr>\n            <tr>\n                <td colspan=\"2\"><b>TOTAL:</b></td>\n                <td colspan=\"2\">$<b>{{ this.total }}</b></td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<button type=\"button\" [mat-dialog-close] class=\"btn btn-danger float-left\">Salir</button>","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/order.service';\n\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { ItemsComponent } from '../items/items.component';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/shared/user.service';\n\n\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styles: [\n  ]\n})\nexport class OrderComponent implements OnInit {\n\n  constructor( public service: OrderService,\n    private dialog: MatDialog,\n    private router: Router,\n    private userService: UserService ) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n    let userData = this.userService.getUserData()\n\n    if (userData != null)\n    { \n    this.service.formData.waiter = userData.identity.name\n    }\n  }\n\n  resetForm( form?:NgForm ){\n\n    if( form = null ){\n      form.resetForm();\n    }\n    this.service.formData={\n      orderNo: Math.floor((100000 + Math.random() * 900000)),\n      id: null,\n      customerName: null,\n      gTotal: 0,\n      orderType: 0,\n      status: 1\n    }\n\n    this.service.orderItems = []\n  }\n  \n  addEditItem(orderItemIndex, orderId){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"95%\";\n    dialogConfig.data = {\n      orderItemIndex,\n      orderId\n    }\n    this.dialog.open(ItemsComponent, dialogConfig).afterClosed().subscribe(res=>{\n      this.updateGrandTotal();\n    });\n  }\n\n  onDeleteOrderItem(orderItemId: number, i: number){\n    this.service.orderItems.splice(i, 1);\n    this.updateGrandTotal();\n  }\n\n  updateGrandTotal(){\n    this.service.formData.gTotal =(this.service.orderItems.reduce((prev, curr)=>{\n      return prev + curr.total;\n    },0))\n\n    this.service.formData.gTotal = parseFloat( this.service.formData.gTotal.toFixed(2) );\n  }\n\n  onSubmit(form: NgForm){\n    this.service.uploadOrder().subscribe(res=>{\n      this.resetForm();\n      this.router.navigate(['orders'])\n    })\n  }\n\n\n}\n","<div class=\"jumbotron\" style=\"width: 100%; height: 10%;\">\n    \n</div> \n\n<form class=\"form\" #form=\"ngForm\" autocomplete=\"off\" *ngIf=\"service.formData\" (submit)=\"onSubmit(form)\" >\n    <div class=\"container\">\n        <div class=\"form-group\">\n            <label for=\"orderNo \">Orden n°:</label>\n            <input name=\"orderNo\" #OrderNo=\"ngModel\" [(ngModel)]=\"service.formData.orderNo\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"waiter\">Mozo/a:</label>\n            <input name=\"waiter\" #waiter=\"ngModel\" [(ngModel)]=\"service.formData.waiter\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"customerName\">Mesa N°/ Nombre del cliente:</label>\n            <input name=\"customerName\" #customerName=\"ngModel\" [(ngModel)]=\"service.formData.customerName\" class=\"form-control mx-sm-3\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"orderType\">Tipo de pedido:</label>\n            <select name=\"orderType\" #orderType=\"ngModel\" [(ngModel)]=\"service.formData.orderType\" class=\"form-control mx-sm-3\">\n                <option default value=\"0\">Come en local</option>\n                <option value=\"1\">Para llevar</option>\n            </select>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col\">\n                <label class=\"text-justify text-center\" for=\"total\">Total:</label>\n            </div>\n            <div class=\"col input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"gTotal\" #gTotal=\"ngModel\" [(ngModel)]=\"service.formData.gTotal\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    \n\n\n    <!-- items table -->\n    <table class=\"table\">\n        <thead class=\"thead\">\n            <th>Item</th>\n            <th>Precio</th>\n            <th>#</th>\n            <th>Total</th>\n            <th><a (click)=\"addEditItem(null,service.formData.id)\" class=\"btn btn-success text-light\"><i class=\"material-icons\" style=\"font-size: 16px;\">add</i></a></th>\n        </thead>\n        <tbody>\n            <!-- display if no items -->\n            <tr *ngIf=\"service.orderItems.length == 0\">\n                <td colspan=\"4\">No hay ítems en esta orden.</td>\n            </tr>\n            \n            <tr *ngFor=\"let item of service.orderItems; let i = index;\">\n                <td>{{ item.itemName }}</td>\n                <td>{{ item.price }}</td>\n                <td>{{ item.amount }}</td>\n                <td>{{ item.total }}</td>\n                <div class=\"btn-group\" role=\"group\">\n                    <td><a (click)=\"addEditItem(i,service.formData.id)\" class=\"btn btn-warning\"><i class=\"material-icons\" style=\"font-size: 16px;\">edit</i></a>\n                        <a (click)=\"onDeleteOrderItem(item.id, i)\" class=\"btn btn-danger text-white\"><i class=\"material-icons\" style=\"font-size: 16px;\">delete</i></a>\n                    </td>\n                </div>\n            </tr>\n        </tbody>\n    </table>\n\n    <div class=\"form-group row\">\n    \n        <button [routerLink]=\"'../orders'\" class=\"btn btn-danger col\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success col\"><b>Aceptar</b></button>\n    </div>\n</div>\n</form>\n\n\n","import { Component, OnInit, resolveForwardRef } from '@angular/core';\nimport { OrderService } from '../shared/order.service';\nimport { UserService } from \"../shared/user.service\";\nimport { Order } from '../shared/order';\nimport { Router } from \"@angular/router\";\n\n/* trying to auto-fetch data */\nimport { interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators'; \n\n/* implementing mat dialog for order detail after order is posted */\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\n\n\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styles: [ \n  ]\n})\nexport class OrdersComponent implements OnInit {\n\n  orderList;\n\n  constructor( private service: OrderService,\n    private userService: UserService,\n    private router: Router,\n    private dialog: MatDialog ) { }\n\n  ngOnInit(): void {\n    this.service.getOrderList().then(res=> {this.orderList = res});\n    \n    \n    \n    let pollInterval = 10000;\n    const httpObservable = interval(pollInterval).pipe(\n    switchMap(x => this.service.getOrderList())\n   );\n     httpObservable.subscribe((x: any[]) => {\n       if(x.length  === this.orderList.length){\n         return;\n       }else{\n        this.orderList = x\n       }\n      });\n\n  } \n\n  getUserType(){\n    let userData = this.userService.getUserData()\n    if(userData.identity.name == 'admin'){\n      return true\n    }\n    return false\n  }\n\n  updateStatus(item: Order){\n    let updatedValue;\n\n    if(item.status == 1){\n      updatedValue = 2\n    }else if(item.status == 2){\n      updatedValue = 0\n    }\n\n    let res = {\n      orderNo: item.orderNo,\n      status: updatedValue\n    }\n  \n    this.service.updateOrderStatus(res).subscribe(res=>{\n      this.service.getOrderList().then(res=> {this.orderList = res});\n    },\n    err =>{\n      console.log(err)\n    })\n  }\n\n  newOrder(){\n    this.router.navigate(['/order'])\n  }\n\n \n  getOrderDetail(ordernumber: number){\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"95%\";\n    dialogConfig.data = {\n      ordernumber: ordernumber\n    }\n    this.dialog.open(OrderDetailComponent,dialogConfig)\n  }\n}\n\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <button class=\"btn btn-primary my-2 my-sm-0 text-white\" \n    style=\"width: 100vw;\" [routerLink]=\"'../order'\" >Nuevo Pedido</button>\n</nav>\n\n<div class=\"container\">\n        <div class=\"card mt-2 pt-2 mb-2 pb-2\" *ngFor=\"let item of orderList\" [class.bg-success]=\"item.status == 2\" [class.text-white]=\"item.status == 2\" >\n            <div class=\"card-header\">\n                <h5 *ngIf=\"item.orderType==1\"class=\"card-title text-center\">Mesa: {{ item.customer }}</h5>\n                <h5 *ngIf=\"item.orderType==0\"class=\"card-title text-center\">Cliente: {{ item.customer }}</h5>\n            </div>\n            <div class=\"card-body\" style=\"@media screen (min-width: 600px) {\n                text-align: center;\n            } \">\n                \n                <ul> Mozo/a: {{ item.waiter }} </ul>\n                <ul> Hora: {{ item.time }} </ul>\n                <ul *ngIf=\"item.status == 1\">Estado: En preparación </ul>\n                <ul *ngIf=\"item.status == 2\">Estado: Listo  </ul>\n                <ul *ngIf=\"item.orderType == 1\"> Tipo: En local</ul>\n                <ul *ngIf=\"item.orderType == 0\"> Tipo: Para llevar </ul>\n                <div class=\"card-links d-flex justify-content-center\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"getOrderDetail(item.orderNo)\">Ver Detalle</button>\n                    <button type=\"button\" *ngIf=\"getUserType()\" (click)=\"updateStatus(item)\" class=\"btn btn-primary\">Actualizar Estado</button>\n                </div>\n                \n            </div>\n        </div>\n</div>","import { Injectable } from '@angular/core';\nimport { UserService } from \"./user.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardService {\n\n  constructor( private auth: UserService,\n    private router: Router ) { }\n\n  canActivate(){\n    if(this.auth.getUserData().identity.name == 'admin'){\n      \n      return true\n    }else{\n      this.router.navigate(['orders'])\n      return false\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from \"@angular/router\";\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor( private auth: UserService,\n    private router: Router ) { }\n\n  canActivate(){\n    if(this.auth.isLogged() == false){\n      this.router.navigate(['login'])\n      return false\n    }else{\n      return true\n    }\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor( private http:HttpClient ) { }\n\n  getItemList(){\n    \n    return this.http.get(environment.apiURL + 'item').toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Order } from './order';\nimport { OrderItem } from './order-item';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { env } from 'process';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  formData: Order;\n  orderItems: OrderItem[];\n  constructor( private http: HttpClient ) { }\n\n\n  uploadOrder(){\n\n    let body ={\n      ...this.formData,\n      orderItems: this.orderItems\n    }\n    return this.http.post( environment.apiURL + 'add-order', body);\n  }\n\n  getOrderList(){\n    return this.http.get(environment.apiURL + 'orders').toPromise()\n  }\n\n  updateOrderStatus(req: object){\n\n    return this.http.post( environment.apiURL + 'update-status', req )\n  }\n\n  getOrderItems(orderno: number){\n    return this.http.post(environment.apiURL + 'get-order-items', orderno)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { User } from \"../shared/user.model\";\nimport { environment } from 'src/environments/environment';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private token : string;\n\n  constructor( private http:HttpClient ) { }\n\n  registerUser(user: User){\n    const body = {\n      username: user.username,\n      password: user.password\n    }\n\n    return this.http.post(environment.apiURL + 'signup', body);\n  }\n\n  loginUser(user: User){\n    const body = {\n      username: user.username,\n      password: user.password\n    }\n\n    return this.http.post(environment.apiURL + 'login', body)\n  }\n\n  saveToken(token:string){\n    this.token = token;\n    localStorage.setItem('usertoken', token);\n  }\n\n  getToken(): string{\n    if (!this.token){\n      return localStorage.getItem('usertoken');\n      \n    }\n    \n    return this.token\n  }\n\n  getUserData(){\n    const token = this.getToken()\n    if (token){\n      let res = token.split('.')[1]\n      res = window.atob(res)\n      return JSON.parse(res)\n      \n    }else{\n      return null;\n    }\n  }\n\n  public isLogged(){\n    if(this.getUserData() != null){\n      return true\n    }\n    return false\n  }\n\n  public logout(){\n    this.token = '';\n    localStorage.removeItem('usertoken')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { User } from \"../../shared/user.model\";\nimport { UserService } from \"../../shared/user.service\";\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: User;\n\n  constructor( private userService: UserService,\n    private router: Router ) { }\n\n  ngOnInit(): void {\n    this.resetForm()\n  }\n\n  login(form:NgForm){\n    this.userService.loginUser(form.value).subscribe((suc:string)=>{\n  \n      localStorage.setItem('usertoken', suc[\"token\"]);\n      this.router.navigate(['orders'])\n    },\n    (err)=>{\n      console.log(err)\n    })\n  }\n\n  resetForm(form?: NgForm){\n    if(form != null){\n      form.reset();\n    }\n    this.user = {\n      username: '',\n      password: ''\n    }\n  }\n}\n","\n<div class=\"text-center formcontainer\">\n    <form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n      <img class=\"mb-4\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Q11707_noun_11637_ccFedericoPanzano_restaurant.svg/1200px-Q11707_noun_11637_ccFedericoPanzano_restaurant.svg.png\" alt=\"\" width=\"30%\" height=\"30%\">\n      \n      <label for=\"username\" class=\"sr-only\">Nombre</label>\n      <input type=\"text\"  class=\"form-control\" placeholder=\"Nombre\" name=\"username\" #username=\"ngModel\" [(ngModel)]=\"user.username\" required autofocus>\n\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Contraseña\" name=\"password\" #password=\"ngModel\" \n      [(ngModel)]=\"user.password\" required>\n      \n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Ingresar</button>\n      \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/shared/user.model';\n\nimport { NgForm } from \"@angular/forms\";\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  user: User;\n\n\n  constructor( private userService: UserService,\n              private router: Router ) { }\n\n  ngOnInit(): void {\n    this.resetForm()\n  }\n\n\n  resetForm(form?:NgForm){\n    if(form != null){ \n      form.reset() \n    }\n    this.user = {\n      username: '',\n      password: ''\n    }\n  }\n\n  onSubmit(form:NgForm){\n    this.userService.registerUser(form.value).subscribe(res=>{\n      this.resetForm(),\n    this.router.navigate(['login'])});\n    \n  }\n}\n","\n<div class=\"text-center formcontainer\">\n    <form class=\"form-signin\" #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit(registerForm)\">\n      <img class=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\n      <h1 class=\"h3 mb-3 font-weight-normal\">Registrar nuevo usuario</h1>\n      <label for=\"username\" class=\"sr-only\">Nombre</label>\n      <input type=\"text\"  class=\"form-control\" placeholder=\"Nombre\" name=\"username\" #username=\"ngModel\" [(ngModel)]=\"user.username\" required autofocus>\n\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Contraseña\" name=\"password\" #password=\"ngModel\" \n      [(ngModel)]=\"user.password\" required>\n      \n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Registrar</button>\n      \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://192.168.0.157:5000/api/'\n   /*  apiURL: 'http://0.0.0.0:5000/api/' */\n  /* apiURL :'http://127.0.0.1:5000/api/' */\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}