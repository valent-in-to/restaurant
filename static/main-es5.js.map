{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/orders/items/items.component.ts","webpack:///src/app/orders/items/items.component.html","webpack:///src/app/orders/order/order.component.ts","webpack:///src/app/orders/order/order.component.html","webpack:///src/app/orders/orders.component.ts","webpack:///src/app/shared/item.service.ts","webpack:///src/app/shared/order.service.ts","webpack:///src/app/shared/waiter.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","providers","bootstrap","ItemsComponent","data","dialogRef","itemService","orderService","isValid","getItemList","res","itemList","orderItemIndex","formData","orderId","orderNo","itemId","itemName","price","amount","total","Object","assign","orderItems","ctrl","selectedIndex","name","updateTotal","parseFloat","toFixed","form","validateForm","value","push","close","onSubmit","updatePrice","styles","OrderComponent","service","dialog","waiterService","resetForm","getWaiter","waiter","JSON","stringify","Math","floor","random","customerName","gTotal","orderType","dialogConfig","autoFocus","disableClose","width","open","afterClosed","subscribe","updateGrandTotal","orderItemId","i","splice","reduce","prev","curr","uploadOrder","OrdersComponent","ItemService","http","get","apiURL","toPromise","providedIn","OrderService","body","post","WaiterService","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderComponent } from './orders/order/order.component';\nimport { OrdersComponent } from './orders/orders.component';\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'order', pathMatch:'full'},\n  {path:'orders', component:OrdersComponent},\n  {path:'order', children:[\n    {path:'', component:OrderComponent},\n    {path:'edit/:id', component:OrderComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Restaurant';\n\n}\n","<div class=\"jumbotron\">\n  <h2 class=\"text-center\">Pedidos</h2>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { ItemsComponent } from './orders/items/items.component';\nimport { OrderService } from './shared/order.service';\n\nimport { FormsModule, FormControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HttpClientModule } from \"@angular/common/http\";\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    OrderComponent,\n    ItemsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpClientModule\n    \n  ],\n  entryComponents: [\n    ItemsComponent\n  ],\n  providers: [\n    OrderService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { OrderItem } from 'src/app/shared/order-item';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { Item } from 'src/app/shared/item';\nimport { NgForm } from '@angular/forms';\nimport { OrderService } from 'src/app/shared/order.service';\n\n\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styles: [\n  ]\n})\nexport class ItemsComponent implements OnInit {\n\n  formData: OrderItem;\n  itemList: Item[];\n  isValid = true;\n\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<ItemsComponent>,\n    private itemService: ItemService,\n    private orderService: OrderService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.itemService.getItemList().then(res => this.itemList = res as Item[])\n \n    if(this.data.orderItemIndex == null){\n      this.formData = {\n        id: null,\n        orderId: this.orderService.formData.orderNo,\n        itemId: 0,\n        itemName: '',\n        price: 0,\n        amount: 1,\n        total: 0\n      }\n    }\n    else{\n      this.formData = Object.assign( {}, this.orderService.orderItems[this.data.orderItemIndex]);\n    }\n  }\n\n  updatePrice(ctrl){\n    if(ctrl.selectedIndex == 0){\n      this.formData.price = 0;\n      this.formData.itemName = \"\";\n    }\n    else{\n      this.formData.price = this.itemList[ctrl.selectedIndex-1].price;\n      this.formData.itemName = this.itemList[ctrl.selectedIndex-1].name;\n    }\n    this.updateTotal();\n  }\n\n  updateTotal(){\n    this.formData.total = this.formData.amount * parseFloat((this.formData.price).toFixed(2));\n  }\n\n  onSubmit(form:NgForm){\n    if(this.validateForm(form.value)){\n\n      if(this.data.orderItemIndex == null){\n        this.orderService.orderItems.push(form.value);\n      }\n      else{\n        this.orderService.orderItems[this.data.orderItemIndex] = form.value;\n      }\n      \n      this.dialogRef.close();\n    }\n    \n  }\n\n  validateForm(formData:OrderItem){\n    this.isValid = true;\n    if(formData.itemId == 0 || formData.amount == 0){\n      this.isValid = false;\n    }\n    return this.isValid;\n    \n  }\n   \n}\n","\n<form autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n\n\n    <!-- hidden inputs for implicit data -->\n    <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n    <input type=\"hidden\" name=\"itemName\" #itemName=\"ngModel\" [(ngModel)]=\"formData.itemName\">\n    <input type=\"hidden\" name=\"orderId\" #orderId=\"ngModel\" [(ngModel)]=\"formData.orderId\">\n\n    <div class=\"form-group\">\n        <label for=\"item\">Item</label>\n        <select name=\"itemId\" #itemId=\"ngModel\" [(ngModel)]=\"formData.itemId\" class=\"form-control\" (change)=\"updatePrice($event.target)\"\n        [class.is-invalid]=\"!isValid && formData.itemId == 0\">\n            <option value=\"0\">--Selecciona un item--</option>\n            <option *ngFor=\"let item of itemList\" value=\"{{item.id}}\">{{item.name}}</option>\n        </select>\n    </div>\n\n    <div class=\"row form-group col-md-6\">\n         <label class=\"text-justify text-center\" for=\"price\">Precio</label>\n        <div class=\"input-group\">\n            <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n            <input name=\"price\" #price=\"ngModel\" [(ngModel)]=\"formData.price\" class=\"form-control\" readonly>\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"amount\">Cantidad</label>\n            <input type=\"number\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"formData.amount\" class=\"form-control\" \n            (change)=\"updateTotal()\" [class.is-invalid]=\"!isValid && formData.amount == 0\">\n        </div>\n\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"total\">Total</label>\n            <div class=\"input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"total\" #total=\"ngModel\" [(ngModel)]=\"formData.total\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <button type=\"button\" [mat-dialog-close] class=\"btn btn-danger float-left\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success float-right\"><b>Aceptar</b></button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/order.service';\nimport { WaiterService } from 'src/app/shared/waiter.service'\n\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { ItemsComponent } from '../items/items.component';\n\n\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styles: [\n  ]\n})\nexport class OrderComponent implements OnInit {\n\n  constructor( public service: OrderService,\n    private dialog: MatDialog,\n    private waiterService: WaiterService ) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n\n    \n    this.waiterService.getWaiter().then(res => this.service.formData.waiter = JSON.stringify(res)) \n \n  }\n\n  resetForm( form?:NgForm ){\n\n    if( form = null ){\n      form.resetForm();\n    }\n    this.service.formData={\n      orderNo: Math.floor((100000 + Math.random() * 900000)),\n      id: null,\n      customerName: null,\n      gTotal: 0,\n      orderType: 0,\n    }\n\n    this.service.orderItems = []\n  }\n  \n  addEditItem(orderItemIndex, orderId){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"95%\";\n    dialogConfig.data = {\n      orderItemIndex,\n      orderId\n    }\n    this.dialog.open(ItemsComponent, dialogConfig).afterClosed().subscribe(res=>{\n      this.updateGrandTotal();\n    });\n  }\n\n  onDeleteOrderItem(orderItemId: number, i: number){\n    this.service.orderItems.splice(i, 1);\n    this.updateGrandTotal();\n  }\n\n  updateGrandTotal(){\n    this.service.formData.gTotal =(this.service.orderItems.reduce((prev, curr)=>{\n      return prev + curr.total;\n    },0))\n\n    this.service.formData.gTotal = parseFloat( this.service.formData.gTotal.toFixed(2) );\n  }\n\n  onSubmit(form: NgForm){\n    this.service.uploadOrder().subscribe(res=>{\n      this.resetForm();\n    })\n  }\n\n\n}\n","<form class=\"form\" #form=\"ngForm\" autocomplete=\"off\" *ngIf=\"service.formData\" (submit)=\"onSubmit(form)\" >\n    <div class=\"container\">\n        <div class=\"form-group\">\n            <label for=\"orderNo \">Orden n°:</label>\n            <input name=\"orderNo\" #OrderNo=\"ngModel\" [(ngModel)]=\"service.formData.orderNo\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"waiter\">Mozo/a:</label>\n            <input name=\"waiter\" #waiter=\"ngModel\" [(ngModel)]=\"service.formData.waiter\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"customerName\">Mesa N°/ Nombre del cliente:</label>\n            <input name=\"customerName\" #customerName=\"ngModel\" [(ngModel)]=\"service.formData.customerName\" class=\"form-control mx-sm-3\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"orderType\">Tipo de pedido:</label>\n            <select name=\"orderType\" #orderType=\"ngModel\" [(ngModel)]=\"service.formData.orderType\" class=\"form-control mx-sm-3\">\n                <option default value=\"0\">Come en local</option>\n                <option value=\"1\">Para llevar</option>\n            </select>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col\">\n                <label class=\"text-justify text-center\" for=\"total\">Total:</label>\n            </div>\n            <div class=\"col input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"gTotal\" #gTotal=\"ngModel\" [(ngModel)]=\"service.formData.gTotal\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    \n\n\n    <!-- items table -->\n    <table class=\"table table-borderless\">\n        <thead class=\"thead\">\n            <th>Item</th>\n            <th>Precio</th>\n            <th>#</th>\n            <th>Total</th>\n            <th><a (click)=\"addEditItem(null,service.formData.id)\" class=\"btn btn-success text-light\"><b>+</b></a></th>\n        </thead>\n        <tbody>\n            <!-- display if no items -->\n            <tr *ngIf=\"service.orderItems.length == 0\">\n                <td colspan=\"4\">No hay ítems en esta orden.</td>\n            </tr>\n            \n            <tr *ngFor=\"let item of service.orderItems; let i = index;\">\n                <td>{{ item.itemName }}</td>\n                <td>{{ item.price }}</td>\n                <td>{{ item.amount }}</td>\n                <td>{{ item.total }}</td>\n                <div class=\"btn-group\" role=\"group\">\n                    <th><a (click)=\"addEditItem(i,service.formData.id)\" class=\"btn btn-warning\">e</a><a (click)=\"onDeleteOrderItem(item.id, i)\" class=\"btn btn-danger text-white\">x</a></th>\n                </div>\n            </tr>\n        </tbody>\n    </table>\n\n    <div class=\"form-group row\">\n    \n        <button type=\"button\" (onclick)=\"resetForm(form)\" class=\"btn btn-danger col\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success col\"><b>Aceptar</b></button>\n    </div>\n</div>\n</form>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../shared/order.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styles: [\n  ]\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor( ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor( private http:HttpClient ) { }\n\n  getItemList(){\n    \n    return this.http.get(environment.apiURL + 'item').toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Order } from './order';\nimport { OrderItem } from './order-item';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  formData: Order;\n  orderItems: OrderItem[];\n  constructor( private http: HttpClient ) { }\n\n\n  uploadOrder(){\n\n    let body ={\n      ...this.formData,\n      orderItems: this.orderItems\n    }\n    return this.http.post( environment.apiURL + 'add-order', body);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaiterService {\n\n  constructor( private http:HttpClient ) { }\n\n  getWaiter(){\n    \n    return this.http.get(environment.apiURL + 'waiter').toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://0.0.0.0:5000/'\n  /* apiURL :'http://127.0.0.1:5000/' */\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}