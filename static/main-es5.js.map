{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/orders/items/items.component.ts","webpack:///src/app/orders/items/items.component.html","webpack:///src/app/orders/order-detail/order-detail.component.ts","webpack:///src/app/orders/order-detail/order-detail.component.html","webpack:///src/app/orders/order/order.component.ts","webpack:///src/app/orders/order/order.component.html","webpack:///src/app/orders/orders.component.ts","webpack:///src/app/orders/orders.component.html","webpack:///src/app/shared/admin-guard.service.ts","webpack:///src/app/shared/auth-guard.service.ts","webpack:///src/app/shared/item.service.ts","webpack:///src/app/shared/order.service.ts","webpack:///src/app/shared/user.service.ts","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/sign-up/sign-up.component.ts","webpack:///src/app/user/sign-up/sign-up.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","providers","bootstrap","ItemsComponent","data","dialogRef","itemService","orderService","isValid","getItemList","res","itemList","orderItemIndex","formData","orderId","orderNo","itemId","itemName","price","amount","total","Object","assign","orderItems","ctrl","selectedIndex","name","updateTotal","parseFloat","toFixed","form","validateForm","value","push","close","onSubmit","updatePrice","styles","OrderDetailComponent","service","getOrderItems","ordernumber","subscribe","x","reduce","prev","cur","itemTotal","OrderComponent","dialog","router","userService","resetForm","userData","getUserData","waiter","identity","Math","floor","random","customerName","gTotal","orderType","status","dialogConfig","autoFocus","disableClose","width","open","afterClosed","updateGrandTotal","orderItemId","i","splice","curr","uploadOrder","navigate","OrdersComponent","getOrderList","orderList","pollInterval","httpObservable","pipe","length","item","updatedValue","updateOrderStatus","err","console","log","AdminGuardService","auth","providedIn","AuthGuardService","isLogged","ItemService","http","get","apiURL","toPromise","OrderService","body","post","orderno","UserService","user","username","password","token","localStorage","setItem","getItem","getToken","split","window","atob","JSON","parse","removeItem","LoginComponent","loginUser","suc","reset","login","SignUpComponent","registerUser","UserComponent","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAC,EAAN;AAAUC,gBAAU,EAAC,QAArB;AAA+BC,eAAS,EAAC;AAAzC,KADqB,EAErB;AAACF,UAAI,EAAC,QAAN;AAAgBG,eAAS,EAAC,wEAA1B;AAA2CC,iBAAW,EAAC,CAAC,2EAAD;AAAvD,KAFqB,EAGrB;AAACJ,UAAI,EAAC,OAAN;AAAeI,iBAAW,EAAC,CAAC,2EAAD,CAA3B;AAA+CC,cAAQ,EAAC,CACtD;AAACL,YAAI,EAAC,EAAN;AAAUG,iBAAS,EAAC;AAApB,OADsD,EAEtD;AAACH,YAAI,EAAC,UAAN;AAAkBG,iBAAS,EAAC;AAA5B,OAFsD;AAAxD,KAHqB,EAOrB;AAACH,UAAI,EAAC,QAAN;AAAgBG,eAAS,EAAC,+EAA1B;AAA2CC,iBAAW,EAAC,CAAC,6EAAD;AAAvD,KAPqB,EAQrB;AAACJ,UAAI,EAAC,OAAN;AAAeG,eAAS,EAAC;AAAzB,KARqB,CAAvB;;QAeaG,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBR,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBO,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBR,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC1B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaY,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,YAAR;AAED,K;;;uBAHYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACNzB;;;;;;;;;sEDMaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiEaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBATT,CACT,kEADS,EAET,iEAFS,EAGT,iEAHS,EAIT,4EAJS,EAKT,8EALS,C;AAMV,gBApBQ,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,0DAJO,EAKP,6FALO,EAMP,yEANO,EAOP,sEAPO,CAoBR;;;;0HAGUA,S,EAAS;AAAA,uBAhClB,2DAgCkB,EA/BlB,wEA+BkB,EA9BlB,4EA8BkB,EA7BlB,4EA6BkB,EA5BlB,mEA4BkB,EA3BlB,gFA2BkB,EA1BlB,2EA0BkB,EAzBlB,iGAyBkB;AAzBE,kBAGpB,uEAHoB,EAIpB,oEAJoB,EAKpB,oEALoB,EAMpB,0DANoB,EAOpB,6FAPoB,EAQpB,yEARoB,EASpB,sEAToB;AAyBF,O;AAhBF,K;;;;;sEAgBPA,S,EAAS;cAlCrB,sDAkCqB;eAlCZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,4EAHY,EAIZ,4EAJY,EAKZ,mEALY,EAMZ,gFANY,EAOZ,2EAPY,EAQZ,iGARY,CADN;AAWRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,0DAJO,EAKP,6FALO,EAMP,yEANO,EAOP,sEAPO,CAXD;AAsBRQ,yBAAe,EAAE,CACf,4EADe,CAtBT;AAyBRC,mBAAS,EAAE,CACT,kEADS,EAET,iEAFS,EAGT,iEAHS,EAIT,4EAJS,EAKT,8EALS,CAzBH;AAgCRC,mBAAS,EAAE,CAAC,2DAAD;AAhCH,S;AAkCY,Q;;;;;;;;;;;;;;;;;;ACjEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcY;;AAA0D;;AAAa;;;;;;AAAjC;;AAAoB;;AAAA;;;;QDEzDC,c;AAQX,8BACkCC,IADlC,EAESC,SAFT,EAGUC,WAHV,EAIUC,YAJV,EAIoC;AAAA;;AAHF,aAAAH,IAAA,GAAAA,IAAA;AACzB,aAAAC,SAAA,GAAAA,SAAA;AACC,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AARV,aAAAC,OAAA,GAAU,IAAV;AASK;;;;mCAEG;AAAA;;AAEN,eAAKF,WAAL,CAAiBG,WAAjB,GAA+BlC,IAA/B,CAAoC,UAAAmC,GAAG;AAAA,mBAAI,KAAI,CAACC,QAAL,GAAgBD,GAApB;AAAA,WAAvC;;AAEA,cAAG,KAAKN,IAAL,CAAUQ,cAAV,IAA4B,IAA/B,EAAoC;AAClC,iBAAKC,QAAL,GAAgB;AACd/B,gBAAE,EAAE,IADU;AAEdgC,qBAAO,EAAE,KAAKP,YAAL,CAAkBM,QAAlB,CAA2BE,OAFtB;AAGdC,oBAAM,EAAE,CAHM;AAIdC,sBAAQ,EAAE,EAJI;AAKdC,mBAAK,EAAE,CALO;AAMdC,oBAAM,EAAE,CANM;AAOdC,mBAAK,EAAE;AAPO,aAAhB;AASD,WAVD,MAWI;AACF,iBAAKP,QAAL,GAAgBQ,MAAM,CAACC,MAAP,CAAe,EAAf,EAAmB,KAAKf,YAAL,CAAkBgB,UAAlB,CAA6B,KAAKnB,IAAL,CAAUQ,cAAvC,CAAnB,CAAhB;AACD;AACF;;;oCAEWY,I,EAAI;AACd,cAAGA,IAAI,CAACC,aAAL,IAAsB,CAAzB,EAA2B;AACzB,iBAAKZ,QAAL,CAAcK,KAAd,GAAsB,CAAtB;AACA,iBAAKL,QAAL,CAAcI,QAAd,GAAyB,EAAzB;AACD,WAHD,MAII;AACF,iBAAKJ,QAAL,CAAcK,KAAd,GAAsB,KAAKP,QAAL,CAAca,IAAI,CAACC,aAAL,GAAmB,CAAjC,EAAoCP,KAA1D;AACA,iBAAKL,QAAL,CAAcI,QAAd,GAAyB,KAAKN,QAAL,CAAca,IAAI,CAACC,aAAL,GAAmB,CAAjC,EAAoCC,IAA7D;AACD;;AACD,eAAKC,WAAL;AACD;;;sCAEU;AACT,eAAKd,QAAL,CAAcO,KAAd,GAAsB,KAAKP,QAAL,CAAcM,MAAd,GAAuBS,UAAU,CAAE,KAAKf,QAAL,CAAcK,KAAf,CAAsBW,OAAtB,CAA8B,CAA9B,CAAD,CAAvD;AACD;;;iCAEQC,I,EAAW;AAClB,cAAG,KAAKC,YAAL,CAAkBD,IAAI,CAACE,KAAvB,CAAH,EAAiC;AAE/B,gBAAG,KAAK5B,IAAL,CAAUQ,cAAV,IAA4B,IAA/B,EAAoC;AAClC,mBAAKL,YAAL,CAAkBgB,UAAlB,CAA6BU,IAA7B,CAAkCH,IAAI,CAACE,KAAvC;AACD,aAFD,MAGI;AACF,mBAAKzB,YAAL,CAAkBgB,UAAlB,CAA6B,KAAKnB,IAAL,CAAUQ,cAAvC,IAAyDkB,IAAI,CAACE,KAA9D;AACD;;AAED,iBAAK3B,SAAL,CAAe6B,KAAf;AACD;AAEF;;;qCAEYrB,Q,EAAkB;AAC7B,eAAKL,OAAL,GAAe,IAAf;;AACA,cAAGK,QAAQ,CAACG,MAAT,IAAmB,CAAnB,IAAwBH,QAAQ,CAACM,MAAT,IAAmB,CAA9C,EAAgD;AAC9C,iBAAKX,OAAL,GAAe,KAAf;AACD;;AACD,iBAAO,KAAKA,OAAZ;AAED;;;;;;;uBAzEUL,c,EAAc,gEASf,wEATe,C,EASA,sI,EAAA,wI,EAAA,0I;AAAA,K;;;YATdA,c;AAAc,gC;AAAA,e;AAAA,c;AAAA,0zC;AAAA;AAAA;;;ACf3B;;AAAwC;AAAA;;AAAA;;AAAA,mBAAU,IAAAgC,QAAA,KAAV;AAAwB,WAAxB;;AAIpC;;AAA6C;AAAA;AAAA;;AAA7C;;AACA;;AAAyD;AAAA;AAAA;;AAAzD;;AACA;;AAAuD;AAAA;AAAA;;AAAvD;;AAEA;;AACI;;AAAkB;;AAAI;;AACtB;;AAAwC;AAAA;AAAA,aAA6B,QAA7B,EAA6B;AAAA,mBAAgC,IAAAC,WAAA,eAAhC;AAA0D,WAAvF;;AAEpC;;AAAkB;;AAAsB;;AACxC;;AACJ;;AACJ;;AAEA;;AACK;;AAAoD;;AAAM;;AAC3D;;AACI;;AAAiD;;AAAC;;AAClD;;AAAqC;AAAA;AAAA;;AAArC;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAAqD;;AAAQ;;AAC7D;;AAAqD;AAAA;AAAA,aAA6B,QAA7B,EAA6B;AAAA,mBACxE,IAAAT,WAAA,EADwE;AAC3D,WAD8B;;AAArD;;AAEJ;;AAEA;;AACI;;AAAoD;;AAAK;;AACzD;;AACI;;AAAiD;;AAAC;;AAClD;;AAAqC;AAAA;AAAA;;AAArC;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAA2E;;AAAQ;;AACnF;;AAA0D;;AAAG;;AAAO;;AAAI;;AAC5E;;AACJ;;;;AAzCiD;;AAAA;;AACY;;AAAA;;AACF;;AAAA;;AAKnD;;AAAA;;AADwC;;AAG5B;;AAAA;;AAQ6B;;AAAA;;AAQZ;;AAAA;;AAD4B;;AAQZ;;AAAA;;;;;;;;;sEDrBxCxB,c,EAAc;cAN1B,uDAM0B;eANhB;AACTR,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTyC,gBAAM,EAAE;AAHC,S;AAMgB,Q;;;;kBAStB,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSY;;AACI;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AACxB;;AAAK;;AAAoB;;AAC7B;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACC;;AAAA;;;;QDHRC,oB;AAKX,oCACkClC,IADlC,EAEOC,SAFP,EAGQkC,OAHR,EAG+B;AAAA;;AAFG,aAAAnC,IAAA,GAAAA,IAAA;AAC3B,aAAAC,SAAA,GAAAA,SAAA;AACC,aAAAkC,OAAA,GAAAA,OAAA;AAA0B;;;;mCAE1B;AAAA;;AAEJ,eAAKA,OAAL,CAAaC,aAAb,CAA2B,KAAKpC,IAAL,CAAUqC,WAArC,EAAkDC,SAAlD,CAA4D,UAACC,CAAD,EAAW;AACrE,kBAAI,CAAChC,QAAL,GAAgBgC,CAAhB;AACA,kBAAI,CAACvB,KAAL,GAAa,MAAI,CAACT,QAAL,CAAciC,MAAd,CAAqB,UAASC,IAAT,EAAeC,GAAf,EAAoB;AACpD,qBAAOD,IAAI,GAAGC,GAAG,CAACC,SAAlB;AACD,aAFY,EAEV,CAFU,CAAb;AAGD,WALD;AAQH;;;;;;;uBApBUT,oB,EAAoB,gEAMrB,wEANqB,C,EAMN,sI,EAAA,0I;AAAA,K;;;YANdA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,0K;AAAA;AAAA;ACVjC;;AACI;;AACI;;AACI;;AAAI;;AAAC;;AACL;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAK;;AACb;;AACA;;AACI;;AAMA;;AACI;;AAAgB;;AAAG;;AAAM;;AAAI;;AAC7B;;AAAgB;;AAAC;;AAAG;;AAAgB;;AAAI;;AAC5C;;AACJ;;AACJ;;AACJ;;AACA;;AAA2E;;AAAK;;;;AAbhE;;AAAA;;AAQoB;;AAAA;;;;;;;;;sEDPvBA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT3C,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;kBAM5B,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;AEhBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgDY;;AACI;;AAAgB;;AAA2B;;AAC/C;;;;;;;;AAEA;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAgB;;AACpB;;AACI;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqE;;AAAmD;;AAAI;;AAAI;;AACnI;;AAAG;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAA0E;;AAAmD;;AAAM;;AAAI;;AAC9I;;AACJ;;AACJ;;;;;;AATQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AApDpB;;AAA8E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1E;;AACI;;AACI;;AAAsB;;AAAS;;AAC/B;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAzC;;AACJ;;AACA;;AACI;;AAAoB;;AAAO;;AAC3B;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;AACJ;;AACA;;AACI;;AAA0B;;AAA4B;;AACtD;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAAnD;;AACJ;;AACA;;AACI;;AAAuB;;AAAe;;AACtC;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAC1C;;AAA0B;;AAAa;;AACvC;;AAAkB;;AAAW;;AACjC;;AACJ;;AACA;;AACI;;AACI;;AAAoD;;AAAM;;AAC9D;;AACA;;AACI;;AAAiD;;AAAC;;AAClD;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;AACJ;;AACJ;;AAKJ;;AACI;;AACI;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAC;;AACL;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;AAAA;;AAAA;;AAAA,qCAAqB,IAArB,EAAyB,2BAAzB;AAAyB,SAAzB;;AAAmF;;AAAmD;;AAAG;;AAAI;;AAAI;;AAC5J;;AACA;;AAEI;;AAIA;;AAWJ;;AACJ;;AAEA;;AAEI;;AAA8D;;AAAQ;;AACtE;;AAAkD;;AAAG;;AAAO;;AAAI;;AACpE;;AACJ;;AACA;;;;;;AAhEqD;;AAAA;;AAIF;;AAAA;;AAIY;;AAAA;;AAIL;;AAAA;;AAWH;;AAAA;;AAiBvC;;AAAA;;AAIA;;AAAA;;AAgBA;;AAAA;;;;QDnDHmD,c;AAEX,8BAAoBT,OAApB,EACUU,MADV,EAEUC,MAFV,EAGUC,WAHV,EAGkC;AAAA;;AAHd,aAAAZ,OAAA,GAAAA,OAAA;AACV,aAAAU,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AAA8B;;;;mCAEhC;AACN,eAAKC,SAAL;AACA,cAAIC,QAAQ,GAAG,KAAKF,WAAL,CAAiBG,WAAjB,EAAf;;AAEA,cAAID,QAAQ,IAAI,IAAhB,EACA;AACA,iBAAKd,OAAL,CAAa1B,QAAb,CAAsB0C,MAAtB,GAA+BF,QAAQ,CAACG,QAAT,CAAkB9B,IAAjD;AACC;AACF;;;kCAEUI,I,EAAY;AAErB,cAAIA,IAAI,GAAG,IAAX,EAAiB;AACfA,gBAAI,CAACsB,SAAL;AACD;;AACD,eAAKb,OAAL,CAAa1B,QAAb,GAAsB;AACpBE,mBAAO,EAAE0C,IAAI,CAACC,KAAL,CAAY,SAASD,IAAI,CAACE,MAAL,KAAgB,MAArC,CADW;AAEpB7E,cAAE,EAAE,IAFgB;AAGpB8E,wBAAY,EAAE,IAHM;AAIpBC,kBAAM,EAAE,CAJY;AAKpBC,qBAAS,EAAE,CALS;AAMpBC,kBAAM,EAAE;AANY,WAAtB;AASA,eAAKxB,OAAL,CAAahB,UAAb,GAA0B,EAA1B;AACD;;;oCAEWX,c,EAAgBE,O,EAAO;AAAA;;AACjC,cAAMkD,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,sBAAY,CAACE,YAAb,GAA4B,IAA5B;AACAF,sBAAY,CAACG,KAAb,GAAqB,KAArB;AACAH,sBAAY,CAAC5D,IAAb,GAAoB;AAClBQ,0BAAc,EAAdA,cADkB;AAElBE,mBAAO,EAAPA;AAFkB,WAApB;AAIA,eAAKmC,MAAL,CAAYmB,IAAZ,CAAiB,qEAAjB,EAAiCJ,YAAjC,EAA+CK,WAA/C,GAA6D3B,SAA7D,CAAuE,UAAAhC,GAAG,EAAE;AAC1E,kBAAI,CAAC4D,gBAAL;AACD,WAFD;AAGD;;;0CAEiBC,W,EAAqBC,C,EAAS;AAC9C,eAAKjC,OAAL,CAAahB,UAAb,CAAwBkD,MAAxB,CAA+BD,CAA/B,EAAkC,CAAlC;AACA,eAAKF,gBAAL;AACD;;;2CAEe;AACd,eAAK/B,OAAL,CAAa1B,QAAb,CAAsBgD,MAAtB,GAA+B,KAAKtB,OAAL,CAAahB,UAAb,CAAwBqB,MAAxB,CAA+B,UAACC,IAAD,EAAO6B,IAAP,EAAc;AAC1E,mBAAO7B,IAAI,GAAG6B,IAAI,CAACtD,KAAnB;AACD,WAF8B,EAE7B,CAF6B,CAA/B;AAIA,eAAKmB,OAAL,CAAa1B,QAAb,CAAsBgD,MAAtB,GAA+BjC,UAAU,CAAE,KAAKW,OAAL,CAAa1B,QAAb,CAAsBgD,MAAtB,CAA6BhC,OAA7B,CAAqC,CAArC,CAAF,CAAzC;AACD;;;iCAEQC,I,EAAY;AAAA;;AACnB,eAAKS,OAAL,CAAaoC,WAAb,GAA2BjC,SAA3B,CAAqC,UAAAhC,GAAG,EAAE;AACxC,kBAAI,CAAC0C,SAAL;;AACA,kBAAI,CAACF,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,WAHD;AAID;;;;;;;uBAlEU5B,c,EAAc,0I,EAAA,mI,EAAA,uH,EAAA,wI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,khD;AAAA;AAAA;ACjB3B;;AAIA;;;;AAAqD;;AAAA;;;;;;;;;sEDaxCA,c,EAAc;cAN1B,uDAM0B;eANhB;AACTrD,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTyC,gBAAM,EAAE;AAHC,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;AAIA;;;;;ACFgB;;AAA4D;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAC5D;;AAA4D;;AAA4B;;;;;;AAA5B;;AAAA;;;;;;AAQ5D;;AAA6B;;AAAuB;;;;;;AACpD;;AAA6B;;AAAe;;;;;;AAC5C;;AAAiC;;AAAc;;;;;;AAC/C;;AAAiC;;AAAkB;;;;;;;;AAG/C;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AAAiB;;;;;;;;AAjB9H;;AACI;;AACI;;AACA;;AACJ;;AACA;;AAII;;AAAK;;AAA0B;;AAC/B;;AAAK;;AAAsB;;AAC3B;;AACA;;AACA;;AACA;;AACA;;AACI;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AAAW;;AAChG;;AACJ;;AAEJ;;AACJ;;;;;;;;AArBqE,qGAAqC,YAArC,EAAqC,mBAArC;;AAEzD;;AAAA;;AACA;;AAAA;;AAMC;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGsB;;AAAA;;;;QDA7BwC,e;AAIX,+BAAqBtC,OAArB,EACUY,WADV,EAEUD,MAFV,EAGUD,MAHV,EAG2B;AAAA;;AAHN,aAAAV,OAAA,GAAAA,OAAA;AACX,aAAAY,WAAA,GAAAA,WAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AAAuB;;;;mCAEzB;AAAA;;AACN,eAAKV,OAAL,CAAauC,YAAb,GAA4BvG,IAA5B,CAAiC,UAAAmC,GAAG,EAAG;AAAC,kBAAI,CAACqE,SAAL,GAAiBrE,GAAjB;AAAqB,WAA7D;AAIA,cAAIsE,YAAY,GAAG,KAAnB;AACA,cAAMC,cAAc,GAAG,sDAASD,YAAT,EAAuBE,IAAvB,CACvB,iEAAU,UAAAvC,CAAC;AAAA,mBAAI,MAAI,CAACJ,OAAL,CAAauC,YAAb,EAAJ;AAAA,WAAX,CADuB,CAAvB;AAGCG,wBAAc,CAACvC,SAAf,CAAyB,UAACC,CAAD,EAAc;AACrC,gBAAGA,CAAC,CAACwC,MAAF,KAAc,MAAI,CAACJ,SAAL,CAAeI,MAAhC,EAAuC;AACrC;AACD,aAFD,MAEK;AACJ,oBAAI,CAACJ,SAAL,GAAiBpC,CAAjB;AACA;AACD,WANF;AAQF;;;sCAEU;AACT,cAAIU,QAAQ,GAAG,KAAKF,WAAL,CAAiBG,WAAjB,EAAf;;AACA,cAAGD,QAAQ,CAACG,QAAT,CAAkB9B,IAAlB,IAA0B,OAA7B,EAAqC;AACnC,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;qCAEY0D,I,EAAW;AAAA;;AACtB,cAAIC,YAAJ;;AAEA,cAAGD,IAAI,CAACrB,MAAL,IAAe,CAAlB,EAAoB;AAClBsB,wBAAY,GAAG,CAAf;AACD,WAFD,MAEM,IAAGD,IAAI,CAACrB,MAAL,IAAe,CAAlB,EAAoB;AACxBsB,wBAAY,GAAG,CAAf;AACD;;AAED,cAAI3E,GAAG,GAAG;AACRK,mBAAO,EAAEqE,IAAI,CAACrE,OADN;AAERgD,kBAAM,EAAEsB;AAFA,WAAV;AAKA,eAAK9C,OAAL,CAAa+C,iBAAb,CAA+B5E,GAA/B,EAAoCgC,SAApC,CAA8C,UAAAhC,GAAG,EAAE;AACjD,kBAAI,CAAC6B,OAAL,CAAauC,YAAb,GAA4BvG,IAA5B,CAAiC,UAAAmC,GAAG,EAAG;AAAC,oBAAI,CAACqE,SAAL,GAAiBrE,GAAjB;AAAqB,aAA7D;AACD,WAFD,EAGA,UAAA6E,GAAG,EAAG;AACJC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WALD;AAMD;;;mCAEO;AACN,eAAKrC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;uCAGcnC,W,EAAmB;AAEhC,cAAMuB,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAACC,SAAb,GAAyB,IAAzB;AACAD,sBAAY,CAACE,YAAb,GAA4B,IAA5B;AACAF,sBAAY,CAACG,KAAb,GAAqB,KAArB;AACAH,sBAAY,CAAC5D,IAAb,GAAoB;AAClBqC,uBAAW,EAAEA;AADK,WAApB;AAGA,eAAKQ,MAAL,CAAYmB,IAAZ,CAAiB,yFAAjB,EAAsCJ,YAAtC;AACD;;;;;;;uBAzEUa,e,EAAe,mI,EAAA,iI,EAAA,uH,EAAA,mI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,stB;AAAA;AAAA;ACvB5B;;AACI;;AACiD;;AAAY;;AACjE;;AAEA;;AACQ;;AAsBR;;;;AA1B0B;;AAAA;;AAIoB;;AAAA;;;;;;;;;sEDiBjCA,e,EAAe;cAN3B,uDAM2B;eANjB;AACTlF,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTyC,gBAAM,EAAE;AAHC,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqD,iB;AAEX,iCAAqBC,IAArB,EACUzC,MADV,EACwB;AAAA;;AADH,aAAAyC,IAAA,GAAAA,IAAA;AACX,aAAAzC,MAAA,GAAAA,MAAA;AAAoB;;;;sCAEnB;AACT,cAAG,KAAKyC,IAAL,CAAUrC,WAAV,GAAwBE,QAAxB,CAAiC9B,IAAjC,IAAyC,OAA5C,EAAoD;AAElD,mBAAO,IAAP;AACD,WAHD,MAGK;AACH,iBAAKwB,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAbUc,iB,EAAiB,iH,EAAA,8G;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVE,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,gB;AAEX,gCAAqBF,IAArB,EACUzC,MADV,EACwB;AAAA;;AADH,aAAAyC,IAAA,GAAAA,IAAA;AACX,aAAAzC,MAAA,GAAAA,MAAA;AAAoB;;;;sCAEnB;AACT,cAAG,KAAKyC,IAAL,CAAUG,QAAV,MAAwB,KAA3B,EAAiC;AAC/B,iBAAK5C,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,mBAAO,KAAP;AACD,WAHD,MAGK;AACH,mBAAO,IAAP;AACD;AACF;;;;;;;uBAZUiB,gB,EAAgB,iH,EAAA,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVD,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaG,W;AAEX,2BAAqBC,IAArB,EAAoC;AAAA;;AAAf,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;sCAE/B;AAET,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,yEAAYC,MAAZ,GAAqB,MAAnC,EAA2CC,SAA3C,EAAP;AACD;;;;;;;uBAPUJ,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVH,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaQ,Y;AAIX,4BAAqBJ,IAArB,EAAqC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAAsB;;;;sCAGhC;AAET,cAAIK,IAAI,mCACH,KAAKxF,QADF,GACU;AAChBU,sBAAU,EAAE,KAAKA;AADD,WADV,CAAR;AAIA,iBAAO,KAAKyE,IAAL,CAAUM,IAAV,CAAgB,yEAAYJ,MAAZ,GAAqB,WAArC,EAAkDG,IAAlD,CAAP;AACD;;;uCAEW;AACV,iBAAO,KAAKL,IAAL,CAAUC,GAAV,CAAc,yEAAYC,MAAZ,GAAqB,QAAnC,EAA6CC,SAA7C,EAAP;AACD;;;0CAEiB/H,G,EAAW;AAE3B,iBAAO,KAAK4H,IAAL,CAAUM,IAAV,CAAgB,yEAAYJ,MAAZ,GAAqB,eAArC,EAAsD9H,GAAtD,CAAP;AACD;;;sCAEamI,O,EAAe;AAC3B,iBAAO,KAAKP,IAAL,CAAUM,IAAV,CAAe,yEAAYJ,MAAZ,GAAqB,iBAApC,EAAuDK,OAAvD,CAAP;AACD;;;;;;;uBA3BUH,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVR,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaY,W;AAIX,2BAAqBR,IAArB,EAAoC;AAAA;;AAAf,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;qCAE7BS,I,EAAU;AACrB,cAAMJ,IAAI,GAAG;AACXK,oBAAQ,EAAED,IAAI,CAACC,QADJ;AAEXC,oBAAQ,EAAEF,IAAI,CAACE;AAFJ,WAAb;AAKA,iBAAO,KAAKX,IAAL,CAAUM,IAAV,CAAe,yEAAYJ,MAAZ,GAAqB,QAApC,EAA8CG,IAA9C,CAAP;AACD;;;kCAESI,I,EAAU;AAClB,cAAMJ,IAAI,GAAG;AACXK,oBAAQ,EAAED,IAAI,CAACC,QADJ;AAEXC,oBAAQ,EAAEF,IAAI,CAACE;AAFJ,WAAb;AAKA,iBAAO,KAAKX,IAAL,CAAUM,IAAV,CAAe,yEAAYJ,MAAZ,GAAqB,OAApC,EAA6CG,IAA7C,CAAP;AACD;;;kCAESO,K,EAAY;AACpB,eAAKA,KAAL,GAAaA,KAAb;AACAC,sBAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,KAAlC;AACD;;;mCAEO;AACN,cAAI,CAAC,KAAKA,KAAV,EAAgB;AACd,mBAAOC,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAP;AAED;;AAED,iBAAO,KAAKH,KAAZ;AACD;;;sCAEU;AACT,cAAMA,KAAK,GAAG,KAAKI,QAAL,EAAd;;AACA,cAAIJ,KAAJ,EAAU;AACR,gBAAIlG,GAAG,GAAGkG,KAAK,CAACK,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAV;AACAvG,eAAG,GAAGwG,MAAM,CAACC,IAAP,CAAYzG,GAAZ,CAAN;AACA,mBAAO0G,IAAI,CAACC,KAAL,CAAW3G,GAAX,CAAP;AAED,WALD,MAKK;AACH,mBAAO,IAAP;AACD;AACF;;;mCAEc;AACb,cAAG,KAAK4C,WAAL,MAAsB,IAAzB,EAA8B;AAC5B,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;iCAEY;AACX,eAAKsD,KAAL,GAAa,EAAb;AACAC,sBAAY,CAACS,UAAb,CAAwB,WAAxB;AACD;;;;;;;uBA5DUd,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVZ,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYa2B,c;AAIX,8BAAqBpE,WAArB,EACUD,MADV,EACwB;AAAA;;AADH,aAAAC,WAAA,GAAAA,WAAA;AACX,aAAAD,MAAA,GAAAA,MAAA;AAAoB;;;;mCAEtB;AACN,eAAKE,SAAL;AACD;;;8BAEKtB,I,EAAW;AAAA;;AACf,eAAKqB,WAAL,CAAiBqE,SAAjB,CAA2B1F,IAAI,CAACE,KAAhC,EAAuCU,SAAvC,CAAiD,UAAC+E,GAAD,EAAc;AAE7DZ,wBAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCW,GAAG,CAAC,OAAD,CAArC;;AACA,kBAAI,CAACvE,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,WAJD,EAKA,UAACW,GAAD,EAAO;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,WAPD;AAQD;;;kCAESzD,I,EAAa;AACrB,cAAGA,IAAI,IAAI,IAAX,EAAgB;AACdA,gBAAI,CAAC4F,KAAL;AACD;;AACD,eAAKjB,IAAL,GAAY;AACVC,oBAAQ,EAAE,EADA;AAEVC,oBAAQ,EAAE;AAFA,WAAZ;AAID;;;;;;;uBA9BUY,c,EAAc,iI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,uzB;AAAA;AAAA;;;ACX3B;;AACI;;AAA8C;AAAA;;AAAA;;AAAA,mBAAY,IAAAI,KAAA,KAAZ;AAA4B,WAA5B;;AAC5C;;AAEA;;AAAsC;;AAAM;;AAC5C;;AAAkG;AAAA;AAAA;;AAAlG;;AAEA;;AAAsC;;AAAQ;;AAC9C;;AACA;AAAA;AAAA;;AADA;;AAGA;;AAA+D;;AAAQ;;AAEzE;;AACJ;;;;AATwG;;AAAA;;AAIlG;;AAAA;;;;;;;;;sEDEOJ,c,EAAc;cAL1B,uDAK0B;eALhB;AACT5H,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca+H,e;AAKX,+BAAqBzE,WAArB,EACoBD,MADpB,EACkC;AAAA;;AADb,aAAAC,WAAA,GAAAA,WAAA;AACD,aAAAD,MAAA,GAAAA,MAAA;AAAoB;;;;mCAEhC;AACN,eAAKE,SAAL;AACD;;;kCAGStB,I,EAAY;AACpB,cAAGA,IAAI,IAAI,IAAX,EAAgB;AACdA,gBAAI,CAAC4F,KAAL;AACD;;AACD,eAAKjB,IAAL,GAAY;AACVC,oBAAQ,EAAE,EADA;AAEVC,oBAAQ,EAAE;AAFA,WAAZ;AAID;;;iCAEQ7E,I,EAAW;AAAA;;AAClB,eAAKqB,WAAL,CAAiB0E,YAAjB,CAA8B/F,IAAI,CAACE,KAAnC,EAA0CU,SAA1C,CAAoD,UAAAhC,GAAG,EAAE;AACvD,kBAAI,CAAC0C,SAAL,IACF,MAAI,CAACF,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,OAAD,CAArB,CADE;AAC8B,WAFhC;AAID;;;;;;;uBA5BUgD,e,EAAe,wI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,yvB;AAAA;AAAA;;;ACb5B;;AACI;;AAAiD;AAAA;;AAAA;;AAAA,mBAAY,IAAAzF,QAAA,KAAZ;AAAkC,WAAlC;;AAC/C;;AACA;;AAAuC;;AAAuB;;AAC9D;;AAAsC;;AAAM;;AAC5C;;AAAkG;AAAA;AAAA;;AAAlG;;AAEA;;AAAsC;;AAAQ;;AAC9C;;AACA;AAAA;AAAA;;AADA;;AAGA;;AAA+D;;AAAS;;AAE1E;;AACJ;;;;AATwG;;AAAA;;AAIlG;;AAAA;;;;;;;;;sEDIOyF,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjI,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEd5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiI,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACP1B;;AAAG;;AAAW;;;;;;;;sEDODA,a,EAAa;cALzB,uDAKyB;eALf;AACTnI,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMkI,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB9B,YAAM,EAAE;AACP;;AACD;;AAJyB,KAApB;AAOP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAY8B,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA1C,GAAG;AAAA,aAAIC,OAAO,CAAC0C,KAAR,CAAc3C,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderComponent } from './orders/order/order.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { LoginComponent } from './user/login/login.component';\n\nimport { AuthGuardService } from \"./shared/auth-guard.service\";\nimport { AdminGuardService } from './shared/admin-guard.service';\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'orders', pathMatch:'full', },\n  {path:'orders', component:OrdersComponent, canActivate:[AuthGuardService]},\n  {path:'order', canActivate:[AuthGuardService] ,children:[\n    {path:'', component:OrderComponent},\n    {path:'edit/:id', component:OrderComponent}\n  ]},\n  {path:'signup', component:SignUpComponent, canActivate:[AdminGuardService]},\n  {path:'login', component:LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Restaurant';\n\n}\n","\n<router-outlet></router-outlet>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { ItemsComponent } from './orders/items/items.component';\nimport { OrderService } from './shared/order.service';\n\nimport { FormsModule, FormControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserComponent } from './user/user.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { UserService } from './shared/user.service';\nimport { ItemService } from './shared/item.service';\n\nimport { AuthGuardService } from \"./shared/auth-guard.service\";\nimport { AdminGuardService } from \"./shared/admin-guard.service\";\nimport { OrderDetailComponent } from './orders/order-detail/order-detail.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    OrderComponent,\n    ItemsComponent,\n    UserComponent,\n    SignUpComponent,\n    LoginComponent,\n    OrderDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpClientModule,\n    \n    \n  ],\n  entryComponents: [\n    ItemsComponent\n  ],\n  providers: [\n    OrderService,\n    UserService,\n    ItemService,\n    AuthGuardService,\n    AdminGuardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { OrderItem } from 'src/app/shared/order-item';\nimport { ItemService } from 'src/app/shared/item.service';\nimport { Item } from 'src/app/shared/item';\nimport { NgForm } from '@angular/forms';\nimport { OrderService } from 'src/app/shared/order.service';\n\n\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styles: [\n  ]\n})\nexport class ItemsComponent implements OnInit {\n\n  formData: OrderItem;\n  itemList: Item[];\n  isValid = true;\n\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<ItemsComponent>,\n    private itemService: ItemService,\n    private orderService: OrderService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.itemService.getItemList().then(res => this.itemList = res as Item[])\n \n    if(this.data.orderItemIndex == null){\n      this.formData = {\n        id: null,\n        orderId: this.orderService.formData.orderNo,\n        itemId: 0,\n        itemName: '',\n        price: 0,\n        amount: 1,\n        total: 0\n      }\n    }\n    else{\n      this.formData = Object.assign( {}, this.orderService.orderItems[this.data.orderItemIndex]);\n    }\n  }\n\n  updatePrice(ctrl){\n    if(ctrl.selectedIndex == 0){\n      this.formData.price = 0;\n      this.formData.itemName = \"\";\n    }\n    else{\n      this.formData.price = this.itemList[ctrl.selectedIndex-1].price;\n      this.formData.itemName = this.itemList[ctrl.selectedIndex-1].name;\n    }\n    this.updateTotal();\n  }\n\n  updateTotal(){\n    this.formData.total = this.formData.amount * parseFloat((this.formData.price).toFixed(2));\n  }\n\n  onSubmit(form:NgForm){\n    if(this.validateForm(form.value)){\n\n      if(this.data.orderItemIndex == null){\n        this.orderService.orderItems.push(form.value);\n      }\n      else{\n        this.orderService.orderItems[this.data.orderItemIndex] = form.value;\n      }\n      \n      this.dialogRef.close();\n    }\n    \n  }\n\n  validateForm(formData:OrderItem){\n    this.isValid = true;\n    if(formData.itemId == 0 || formData.amount == 0){\n      this.isValid = false;\n    }\n    return this.isValid;\n    \n  }\n   \n}\n","\n<form autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n\n\n    <!-- hidden inputs for implicit data -->\n    <input type=\"hidden\" name=\"id\" #id=\"ngModel\" [(ngModel)]=\"formData.id\">\n    <input type=\"hidden\" name=\"itemName\" #itemName=\"ngModel\" [(ngModel)]=\"formData.itemName\">\n    <input type=\"hidden\" name=\"orderId\" #orderId=\"ngModel\" [(ngModel)]=\"formData.orderId\">\n\n    <div class=\"form-group\">\n        <label for=\"item\">Item</label>\n        <select name=\"itemId\" #itemId=\"ngModel\" [(ngModel)]=\"formData.itemId\" class=\"form-control\" (change)=\"updatePrice($event.target)\"\n        [class.is-invalid]=\"!isValid && formData.itemId == 0\">\n            <option value=\"0\">--Selecciona un item--</option>\n            <option *ngFor=\"let item of itemList\" value=\"{{item.id}}\">{{item.name}}</option>\n        </select>\n    </div>\n\n    <div class=\"row form-group col-md-6\">\n         <label class=\"text-justify text-center\" for=\"price\">Precio</label>\n        <div class=\"input-group\">\n            <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n            <input name=\"price\" #price=\"ngModel\" [(ngModel)]=\"formData.price\" class=\"form-control\" readonly>\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"amount\">Cantidad</label>\n            <input type=\"number\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"formData.amount\" class=\"form-control\" \n            (change)=\"updateTotal()\" [class.is-invalid]=\"!isValid && formData.amount == 0\">\n        </div>\n\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"total\">Total</label>\n            <div class=\"input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"total\" #total=\"ngModel\" [(ngModel)]=\"formData.total\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <button type=\"button\" [mat-dialog-close] class=\"btn btn-danger float-left\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success float-right\"><b>Aceptar</b></button>\n    </div>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nimport { OrderService } from 'src/app/shared/order.service';\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n\n  itemList;\n  total;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n  public dialogRef: MatDialogRef<OrderDetailComponent>,\n  private service: OrderService) { }\n\n  ngOnInit(): void {\n  \n      this.service.getOrderItems(this.data.ordernumber).subscribe((x: any) =>{\n        this.itemList = x;\n        this.total = this.itemList.reduce(function(prev, cur) {\n          return prev + cur.itemTotal;\n        }, 0);\n      })\n    \n    \n  }\n  \n  \n      \n    \n  \n  \n}\n","<div class=\"container\">\n    <table class=\"table\">\n        <thead>\n            <th>#</th>\n            <th>Item</th>\n            <th>Precio</th>\n            <th>Total</th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of itemList\"> \n                <td>{{ item.itemAmount }} </td>\n                <td>{{ item.itemName }}</td>\n                <td>{{ item.itemPrice }}</td>\n                <td> {{item.itemTotal}}  </td>\n            </tr>\n            <tr>\n                <td colspan=\"2\"><b>TOTAL:</b></td>\n                <td colspan=\"2\">$<b>{{ this.total }}</b></td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<button type=\"button\" [mat-dialog-close] class=\"btn btn-danger float-left\">Salir</button>","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/order.service';\n\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { ItemsComponent } from '../items/items.component';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/shared/user.service';\n\n\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styles: [\n  ]\n})\nexport class OrderComponent implements OnInit {\n\n  constructor( public service: OrderService,\n    private dialog: MatDialog,\n    private router: Router,\n    private userService: UserService ) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n    let userData = this.userService.getUserData()\n\n    if (userData != null)\n    { \n    this.service.formData.waiter = userData.identity.name\n    }\n  }\n\n  resetForm( form?:NgForm ){\n\n    if( form = null ){\n      form.resetForm();\n    }\n    this.service.formData={\n      orderNo: Math.floor((100000 + Math.random() * 900000)),\n      id: null,\n      customerName: null,\n      gTotal: 0,\n      orderType: 0,\n      status: 1\n    }\n\n    this.service.orderItems = []\n  }\n  \n  addEditItem(orderItemIndex, orderId){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"95%\";\n    dialogConfig.data = {\n      orderItemIndex,\n      orderId\n    }\n    this.dialog.open(ItemsComponent, dialogConfig).afterClosed().subscribe(res=>{\n      this.updateGrandTotal();\n    });\n  }\n\n  onDeleteOrderItem(orderItemId: number, i: number){\n    this.service.orderItems.splice(i, 1);\n    this.updateGrandTotal();\n  }\n\n  updateGrandTotal(){\n    this.service.formData.gTotal =(this.service.orderItems.reduce((prev, curr)=>{\n      return prev + curr.total;\n    },0))\n\n    this.service.formData.gTotal = parseFloat( this.service.formData.gTotal.toFixed(2) );\n  }\n\n  onSubmit(form: NgForm){\n    this.service.uploadOrder().subscribe(res=>{\n      this.resetForm();\n      this.router.navigate(['orders'])\n    })\n  }\n\n\n}\n","<div class=\"jumbotron\" style=\"width: 100%; height: 10%;\">\n    \n</div> \n\n<form class=\"form\" #form=\"ngForm\" autocomplete=\"off\" *ngIf=\"service.formData\" (submit)=\"onSubmit(form)\" >\n    <div class=\"container\">\n        <div class=\"form-group\">\n            <label for=\"orderNo \">Orden n°:</label>\n            <input name=\"orderNo\" #OrderNo=\"ngModel\" [(ngModel)]=\"service.formData.orderNo\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"waiter\">Mozo/a:</label>\n            <input name=\"waiter\" #waiter=\"ngModel\" [(ngModel)]=\"service.formData.waiter\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"customerName\">Mesa N°/ Nombre del cliente:</label>\n            <input name=\"customerName\" #customerName=\"ngModel\" [(ngModel)]=\"service.formData.customerName\" class=\"form-control mx-sm-3\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"orderType\">Tipo de pedido:</label>\n            <select name=\"orderType\" #orderType=\"ngModel\" [(ngModel)]=\"service.formData.orderType\" class=\"form-control mx-sm-3\">\n                <option default value=\"0\">Come en local</option>\n                <option value=\"1\">Para llevar</option>\n            </select>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col\">\n                <label class=\"text-justify text-center\" for=\"total\">Total:</label>\n            </div>\n            <div class=\"col input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"gTotal\" #gTotal=\"ngModel\" [(ngModel)]=\"service.formData.gTotal\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    \n\n\n    <!-- items table -->\n    <table class=\"table\">\n        <thead class=\"thead\">\n            <th>Item</th>\n            <th>Precio</th>\n            <th>#</th>\n            <th>Total</th>\n            <th><a (click)=\"addEditItem(null,service.formData.id)\" class=\"btn btn-success text-light\"><i class=\"material-icons\" style=\"font-size: 16px;\">add</i></a></th>\n        </thead>\n        <tbody>\n            <!-- display if no items -->\n            <tr *ngIf=\"service.orderItems.length == 0\">\n                <td colspan=\"4\">No hay ítems en esta orden.</td>\n            </tr>\n            \n            <tr *ngFor=\"let item of service.orderItems; let i = index;\">\n                <td>{{ item.itemName }}</td>\n                <td>{{ item.price }}</td>\n                <td>{{ item.amount }}</td>\n                <td>{{ item.total }}</td>\n                <div class=\"btn-group\" role=\"group\">\n                    <td><a (click)=\"addEditItem(i,service.formData.id)\" class=\"btn btn-warning\"><i class=\"material-icons\" style=\"font-size: 16px;\">edit</i></a>\n                        <a (click)=\"onDeleteOrderItem(item.id, i)\" class=\"btn btn-danger text-white\"><i class=\"material-icons\" style=\"font-size: 16px;\">delete</i></a>\n                    </td>\n                </div>\n            </tr>\n        </tbody>\n    </table>\n\n    <div class=\"form-group row\">\n    \n        <button [routerLink]=\"'../orders'\" class=\"btn btn-danger col\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success col\"><b>Aceptar</b></button>\n    </div>\n</div>\n</form>\n\n\n","import { Component, OnInit, resolveForwardRef } from '@angular/core';\nimport { OrderService } from '../shared/order.service';\nimport { UserService } from \"../shared/user.service\";\nimport { Order } from '../shared/order';\nimport { Router } from \"@angular/router\";\n\n/* trying to auto-fetch data */\nimport { interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators'; \n\n/* implementing mat dialog for order detail after order is posted */\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\n\n\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styles: [ \n  ]\n})\nexport class OrdersComponent implements OnInit {\n\n  orderList;\n\n  constructor( private service: OrderService,\n    private userService: UserService,\n    private router: Router,\n    private dialog: MatDialog ) { }\n\n  ngOnInit(): void {\n    this.service.getOrderList().then(res=> {this.orderList = res});\n    \n    \n    \n    let pollInterval = 10000;\n    const httpObservable = interval(pollInterval).pipe(\n    switchMap(x => this.service.getOrderList())\n   );\n     httpObservable.subscribe((x: any[]) => {\n       if(x.length  === this.orderList.length){\n         return;\n       }else{\n        this.orderList = x\n       }\n      });\n\n  } \n\n  getUserType(){\n    let userData = this.userService.getUserData()\n    if(userData.identity.name == 'admin'){\n      return true\n    }\n    return false\n  }\n\n  updateStatus(item: Order){\n    let updatedValue;\n\n    if(item.status == 1){\n      updatedValue = 2\n    }else if(item.status == 2){\n      updatedValue = 0\n    }\n\n    let res = {\n      orderNo: item.orderNo,\n      status: updatedValue\n    }\n  \n    this.service.updateOrderStatus(res).subscribe(res=>{\n      this.service.getOrderList().then(res=> {this.orderList = res});\n    },\n    err =>{\n      console.log(err)\n    })\n  }\n\n  newOrder(){\n    this.router.navigate(['/order'])\n  }\n\n \n  getOrderDetail(ordernumber: number){\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"95%\";\n    dialogConfig.data = {\n      ordernumber: ordernumber\n    }\n    this.dialog.open(OrderDetailComponent,dialogConfig)\n  }\n}\n\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <button class=\"btn btn-primary my-2 my-sm-0 text-white\" \n    style=\"width: 100vw;\" [routerLink]=\"'../order'\" >Nuevo Pedido</button>\n</nav>\n\n<div class=\"container\">\n        <div class=\"card mt-2 pt-2 mb-2 pb-2\" *ngFor=\"let item of orderList\" [class.bg-success]=\"item.status == 2\" [class.text-white]=\"item.status == 2\" >\n            <div class=\"card-header\">\n                <h5 *ngIf=\"item.orderType==1\"class=\"card-title text-center\">Mesa: {{ item.customer }}</h5>\n                <h5 *ngIf=\"item.orderType==0\"class=\"card-title text-center\">Cliente: {{ item.customer }}</h5>\n            </div>\n            <div class=\"card-body\" style=\"@media screen (min-width: 600px) {\n                text-align: center;\n            } \">\n                \n                <ul> Mozo/a: {{ item.waiter }} </ul>\n                <ul> Hora: {{ item.time }} </ul>\n                <ul *ngIf=\"item.status == 1\">Estado: En preparación </ul>\n                <ul *ngIf=\"item.status == 2\">Estado: Listo  </ul>\n                <ul *ngIf=\"item.orderType == 1\"> Tipo: En local</ul>\n                <ul *ngIf=\"item.orderType == 0\"> Tipo: Para llevar </ul>\n                <div class=\"card-links d-flex justify-content-center\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"getOrderDetail(item.orderNo)\">Ver Detalle</button>\n                    <button type=\"button\" *ngIf=\"getUserType()\" (click)=\"updateStatus(item)\" class=\"btn btn-primary\">Actualizar Estado</button>\n                </div>\n                \n            </div>\n        </div>\n</div>","import { Injectable } from '@angular/core';\nimport { UserService } from \"./user.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardService {\n\n  constructor( private auth: UserService,\n    private router: Router ) { }\n\n  canActivate(){\n    if(this.auth.getUserData().identity.name == 'admin'){\n      \n      return true\n    }else{\n      this.router.navigate(['orders'])\n      return false\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from \"@angular/router\";\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor( private auth: UserService,\n    private router: Router ) { }\n\n  canActivate(){\n    if(this.auth.isLogged() == false){\n      this.router.navigate(['login'])\n      return false\n    }else{\n      return true\n    }\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  constructor( private http:HttpClient ) { }\n\n  getItemList(){\n    \n    return this.http.get(environment.apiURL + 'item').toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Order } from './order';\nimport { OrderItem } from './order-item';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { env } from 'process';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  formData: Order;\n  orderItems: OrderItem[];\n  constructor( private http: HttpClient ) { }\n\n\n  uploadOrder(){\n\n    let body ={\n      ...this.formData,\n      orderItems: this.orderItems\n    }\n    return this.http.post( environment.apiURL + 'add-order', body);\n  }\n\n  getOrderList(){\n    return this.http.get(environment.apiURL + 'orders').toPromise()\n  }\n\n  updateOrderStatus(req: object){\n\n    return this.http.post( environment.apiURL + 'update-status', req )\n  }\n\n  getOrderItems(orderno: number){\n    return this.http.post(environment.apiURL + 'get-order-items', orderno)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { User } from \"../shared/user.model\";\nimport { environment } from 'src/environments/environment';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private token : string;\n\n  constructor( private http:HttpClient ) { }\n\n  registerUser(user: User){\n    const body = {\n      username: user.username,\n      password: user.password\n    }\n\n    return this.http.post(environment.apiURL + 'signup', body);\n  }\n\n  loginUser(user: User){\n    const body = {\n      username: user.username,\n      password: user.password\n    }\n\n    return this.http.post(environment.apiURL + 'login', body)\n  }\n\n  saveToken(token:string){\n    this.token = token;\n    localStorage.setItem('usertoken', token);\n  }\n\n  getToken(): string{\n    if (!this.token){\n      return localStorage.getItem('usertoken');\n      \n    }\n    \n    return this.token\n  }\n\n  getUserData(){\n    const token = this.getToken()\n    if (token){\n      let res = token.split('.')[1]\n      res = window.atob(res)\n      return JSON.parse(res)\n      \n    }else{\n      return null;\n    }\n  }\n\n  public isLogged(){\n    if(this.getUserData() != null){\n      return true\n    }\n    return false\n  }\n\n  public logout(){\n    this.token = '';\n    localStorage.removeItem('usertoken')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { User } from \"../../shared/user.model\";\nimport { UserService } from \"../../shared/user.service\";\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: User;\n\n  constructor( private userService: UserService,\n    private router: Router ) { }\n\n  ngOnInit(): void {\n    this.resetForm()\n  }\n\n  login(form:NgForm){\n    this.userService.loginUser(form.value).subscribe((suc:string)=>{\n  \n      localStorage.setItem('usertoken', suc[\"token\"]);\n      this.router.navigate(['orders'])\n    },\n    (err)=>{\n      console.log(err)\n    })\n  }\n\n  resetForm(form?: NgForm){\n    if(form != null){\n      form.reset();\n    }\n    this.user = {\n      username: '',\n      password: ''\n    }\n  }\n}\n","\n<div class=\"text-center formcontainer\">\n    <form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n      <img class=\"mb-4\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Q11707_noun_11637_ccFedericoPanzano_restaurant.svg/1200px-Q11707_noun_11637_ccFedericoPanzano_restaurant.svg.png\" alt=\"\" width=\"30%\" height=\"30%\">\n      \n      <label for=\"username\" class=\"sr-only\">Nombre</label>\n      <input type=\"text\"  class=\"form-control\" placeholder=\"Nombre\" name=\"username\" #username=\"ngModel\" [(ngModel)]=\"user.username\" required autofocus>\n\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Contraseña\" name=\"password\" #password=\"ngModel\" \n      [(ngModel)]=\"user.password\" required>\n      \n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Ingresar</button>\n      \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/shared/user.model';\n\nimport { NgForm } from \"@angular/forms\";\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  user: User;\n\n\n  constructor( private userService: UserService,\n              private router: Router ) { }\n\n  ngOnInit(): void {\n    this.resetForm()\n  }\n\n\n  resetForm(form?:NgForm){\n    if(form != null){ \n      form.reset() \n    }\n    this.user = {\n      username: '',\n      password: ''\n    }\n  }\n\n  onSubmit(form:NgForm){\n    this.userService.registerUser(form.value).subscribe(res=>{\n      this.resetForm(),\n    this.router.navigate(['login'])});\n    \n  }\n}\n","\n<div class=\"text-center formcontainer\">\n    <form class=\"form-signin\" #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit(registerForm)\">\n      <img class=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\n      <h1 class=\"h3 mb-3 font-weight-normal\">Registrar nuevo usuario</h1>\n      <label for=\"username\" class=\"sr-only\">Nombre</label>\n      <input type=\"text\"  class=\"form-control\" placeholder=\"Nombre\" name=\"username\" #username=\"ngModel\" [(ngModel)]=\"user.username\" required autofocus>\n\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Contraseña\" name=\"password\" #password=\"ngModel\" \n      [(ngModel)]=\"user.password\" required>\n      \n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Registrar</button>\n      \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://192.168.0.157:5000/api/'\n   /*  apiURL: 'http://0.0.0.0:5000/api/' */\n  /* apiURL :'http://127.0.0.1:5000/api/' */\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}