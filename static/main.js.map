{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/orders/items/items.component.ts","./src/app/orders/items/items.component.html","./src/app/orders/order/order.component.ts","./src/app/orders/order/order.component.html","./src/app/orders/orders.component.ts","./src/app/shared/order.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACS;AACJ;;;AAG5D,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,OAAO,EAAE,SAAS,EAAC,MAAM,EAAC;IAC/C,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,wEAAe,EAAC;IAC1C,EAAC,IAAI,EAAC,OAAO,EAAE,QAAQ,EAAC;YACtB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAC,4EAAc,EAAC;YACnC,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,4EAAc,EAAC;SAC5C,EAAC;CACH,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KAEtB;;wEAHY,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,wEAAwB;QAAA,kEAAO;QAAA,4DAAK;QACtC,4DAAM;QACN,2EAA+B;;6FDIlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACQ;AAEK;AACI;AACA;AACV;AAEI;AACoB;AACnB;AAEH;;AA8BjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBALT;QACT,kEAAY;KACb,YAfQ;YACP,uEAAa;YACb,oEAAgB;YAChB,oEAAS;YACT,0DAAW;YACX,6FAAuB;YACvB,yEAAe;YACf,sEAAgB;SAEjB;mIASU,SAAS,mBAvBlB,2DAAY;QACZ,wEAAe;QACf,4EAAc;QACd,4EAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,oEAAS;QACT,0DAAW;QACX,6FAAuB;QACvB,yEAAe;QACf,sEAAgB;6FAWP,SAAS;cAzBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,4EAAc;oBACd,4EAAc;iBACf;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,oEAAS;oBACT,0DAAW;oBACX,6FAAuB;oBACvB,yEAAe;oBACf,sEAAgB;iBAEjB;gBACD,eAAe,EAAE;oBACf,4EAAc;iBACf;gBACD,SAAS,EAAE;oBACT,kEAAY;iBACb;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;;;;AAWlE,MAAM,cAAc;IAMzB,YACkC,IAAI,EAC7B,SAAuC;QADd,SAAI,GAAJ,IAAI;QAC7B,cAAS,GAAT,SAAS,CAA8B;IAC5C,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,QAAQ,GAAG;YACd,EAAE,EAAE,IAAI;YACR,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,CAAC;SACT;IAEH,CAAC;;4EAvBU,cAAc,kEAOf,wEAAe;8FAPd,cAAc;QCZ3B,6EACI;QAAA,yEACI;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,+EACI;QADoC,4LAA6B;QACjE,4EAA2B;QAAA,iFAAsB;QAAA,4DAAS;QAC9D,4DAAS;QACb,4DAAM;QAEN,yEACK;QAAA,4EAAoD;QAAA,kEAAM;QAAA,4DAAQ;QACnE,0EACI;QAAA,4EAAiD;QAAA,6DAAC;QAAA,4DAAO;QACzD,iFACJ;QADyC,2LAA4B;QAAjE,4DACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,6EAAqD;QAAA,oEAAQ;QAAA,4DAAQ;QACrE,iFACJ;QADyD,4LAA6B;QAAlF,4DACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,6EAAoD;QAAA,iEAAK;QAAA,4DAAQ;QACjE,0EACI;QAAA,4EAAiD;QAAA,6DAAC;QAAA,4DAAO;QACzD,iFACJ;QADyC,2LAA4B;QAAjE,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,8EAAwD;QAAA,oEAAQ;QAAA,4DAAS;QACzE,8EAA0D;QAAA,qEAAG;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAS;QACrF,4DAAM;QACV,4DAAO;;QAhCyC,0DAA6B;QAA7B,wFAA6B;QAS5B,2DAA4B;QAA5B,uFAA4B;QAOZ,0DAA6B;QAA7B,wFAA6B;QAOzC,0DAA4B;QAA5B,uFAA4B;;6FDdpE,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,MAAM,EAAE,EACP;aACF;;sBAQI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEnB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGmB;AACX;;;;;;;ICoC9C,qEACI;IAAA,yEAAgB;IAAA,2FAA2B;IAAA,4DAAK;IACpD,4DAAK;;;;IAEL,qEACI;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,yEAAwE;IAArE,oXAA4C;IAAyB,gEAAI;IAAA,4DAAI;IAAA,4DAAK;IAC7F,4DAAK;;;IALG,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAgB;IAAhB,8EAAgB;IAChB,0DAAiB;IAAjB,+EAAiB;IACjB,0DAAgB;IAAhB,8EAAgB;;;;IAhDpC,6EACI;IAAA,yEACI;IAAA,yEACI;IAAA,2EAAsB;IAAA,yEAAS;IAAA,4DAAQ;IACvC,8EACJ;IAD6C,iWAAsC;IAA/E,4DACJ;IAAA,4DAAM;IACN,yEACI;IAAA,2EAAoB;IAAA,mEAAO;IAAA,4DAAQ;IACnC,+EACJ;IAD4C,iWAAqC;IAA7E,4DACJ;IAAA,4DAAM;IACN,0EACI;IAAA,6EAAuB;IAAA,2EAAe;IAAA,4DAAQ;IAC9C,iFACI;IADwC,qWAAwC;IAChF,8EAA0B;IAAA,yEAAa;IAAA,4DAAS;IAChD,8EAAkB;IAAA,uEAAW;IAAA,4DAAS;IAC1C,4DAAS;IACb,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EAAoD;IAAA,kEAAM;IAAA,4DAAQ;IACtE,4DAAM;IACN,2EACI;IAAA,4EAAiD;IAAA,6DAAC;IAAA,4DAAO;IACzD,iFACJ;IADyC,gWAAoC;IAAzE,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IAIN,6EACI;IAAA,6EACI;IAAA,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACjB,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,yEAA2E;IAAxE,+SAAqB,IAAI,kCAAsB;IAAyB,6DAAC;IAAA,4DAAI;IAAA,4DAAK;IAC7F,4DAAQ;IACR,yEACI;IACA,kHACI;IAGJ,mHACI;IAMR,4DAAQ;IACZ,4DAAQ;IAER,0EACI;IAAA,8EAAwD;IAAA,oEAAQ;IAAA,4DAAS;IACzE,8EAA0D;IAAA,qEAAG;IAAA,mEAAO;IAAA,4DAAI;IAAA,4DAAS;IACrF,4DAAM;IACV,4DAAO;;;IAtD8C,0DAAsC;IAAtC,oGAAsC;IAIvC,0DAAqC;IAArC,mGAAqC;IAIjC,0DAAwC;IAAxC,sGAAwC;IAW3C,2DAAoC;IAApC,kGAAoC;IAiBzE,2DAAsC;IAAtC,uGAAsC;IAItC,0DAAuD;IAAvD,8FAAuD;;AD/BhE,MAAM,cAAc;IAEzB,YAAoB,OAAqB,EAC/B,MAAiB;QADP,YAAO,GAAP,OAAO,CAAc;QAC/B,WAAM,GAAN,MAAM,CAAW;IAAK,CAAC;IAEjC,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS,CAAE,IAAY;QAErB,IAAI,IAAI,GAAG,IAAI,EAAE;YACf,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAC;YACpB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;YACtD,EAAE,EAAE,IAAI;YACR,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,CAAC;SACb;QAED,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;IAC9B,CAAC;IAED,WAAW,CAAC,cAAc,EAAE,OAAO;QACjC,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,IAAI,GAAG;YAClB,cAAc;YACd,OAAO;SACR;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qEAAc,EAAE,YAAY,CAAC;IAChD,CAAC;;4EApCU,cAAc;8FAAd,cAAc;QCb3B,6GACI;;QADiD,sFAAwB;;6FDahE,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAkD;;AAU3C,MAAM,eAAe;IAE1B,gBAAiB,CAAC;IAElB,QAAQ;IAER,CAAC;;8EANU,eAAe;+FAAf,eAAe;6FAAf,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,MAAM,EAAE,EACP;aACF;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAA2C;;AAOpC,MAAM,YAAY;IAIvB,gBAAgB,CAAC;;wEAJN,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderComponent } from './orders/order/order.component';\nimport { OrdersComponent } from './orders/orders.component';\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'order', pathMatch:'full'},\n  {path:'orders', component:OrdersComponent},\n  {path:'order', children:[\n    {path:'', component:OrderComponent},\n    {path:'edit/:id', component:OrderComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Restaurant';\n\n}\n","<div class=\"jumbotron\">\n  <h2 class=\"text-center\">Pedidos</h2>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './orders/order/order.component';\nimport { ItemsComponent } from './orders/items/items.component';\nimport { OrderService } from './shared/order.service';\n\nimport { FormsModule, FormControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HttpClientModule } from \"@angular/common/http\";\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    OrderComponent,\n    ItemsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpClientModule\n    \n  ],\n  entryComponents: [\n    ItemsComponent\n  ],\n  providers: [\n    OrderService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { OrderItem } from 'src/app/shared/order-item';\n\n\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styles: [\n  ]\n})\nexport class ItemsComponent implements OnInit {\n\n  formData: OrderItem;\n\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<ItemsComponent>\n  ) { }\n\n  ngOnInit(): void {\n\n    this.formData = {\n      id: null,\n      orderId: this.data.orderId,\n      itemId: 0,\n      itemName: '',\n      price: 0,\n      amount: 0,\n      total: 0\n    }\n   \n  }\n\n\n\n   \n}\n","<form autocomplete=\"off\" #form=\"ngForm\">\n    <div class=\"form-group\">\n        <label for=\"item\">Item</label>\n        <select name=\"itemId\" #itemId=\"ngModel\" [(ngModel)]=\"formData.itemId\" class=\"form-control\">\n            <option value=\"0\" disabled>--Selecciona un item--</option>\n        </select>\n    </div>\n\n    <div class=\"row form-group col-md-6\">\n         <label class=\"text-justify text-center\" for=\"price\">Precio</label>\n        <div class=\"input-group\">\n            <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n            <input name=\"price\" #price=\"ngModel\" [(ngModel)]=\"formData.price\" class=\"form-control\" readonly>\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"amount\">Cantidad</label>\n            <input type=\"number\" name=\"amount\" #amount=\"ngModel\" [(ngModel)]=\"formData.amount\" class=\"form-control\" value=\"1\">\n        </div>\n\n        <div class=\"form-group col-md-6\">\n            <label class=\"text-justify text-center\" for=\"total\">Total</label>\n            <div class=\"input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"total\" #total=\"ngModel\" [(ngModel)]=\"formData.total\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-danger float-left\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success float-right\"><b>Aceptar</b></button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/order.service';\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { ItemsComponent } from '../items/items.component';\n\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styles: [\n  ]\n})\nexport class OrderComponent implements OnInit {\n\n  constructor( public service: OrderService,\n    private dialog: MatDialog ) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  resetForm( form?:NgForm ){\n\n    if( form = null ){\n      form.resetForm();\n    }\n    this.service.formData={\n      orderNo: Math.floor((100000 + Math.random() * 900000)),\n      id: null,\n      customerId: null,\n      total: 0,\n      waiter: null,\n      orderType: 0\n    }\n\n    this.service.orderItems = []\n  }\n  \n  addEditItem(orderItemIndex, orderId){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"95%\";\n    dialogConfig.data = {\n      orderItemIndex,\n      orderId\n    }\n    this.dialog.open(ItemsComponent, dialogConfig)\n  }\n\n\n}\n","<form class=\"form\" #form=\"ngForm\" autocomplete=\"off\" *ngIf=\"service.formData\">\n    <div class=\"container\">\n        <div class=\"form-group\">\n            <label for=\"orderNo \">Orden n°:</label>\n            <input name=\"orderNo\" #OrderNo=\"ngModel\" [(ngModel)]=\"service.formData.orderNo\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"waiter\">Mozo/a:</label>\n            <input name=\"waiter\" #OrderNo=\"ngModel\" [(ngModel)]=\"service.formData.waiter\" class=\"form-control mx-sm-3\" readonly>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"orderType\">Tipo de pedido:</label>\n            <select name=\"orderType\" #OrderNo=\"ngModel\" [(ngModel)]=\"service.formData.orderType\" class=\"form-control mx-sm-3\">\n                <option default value=\"0\">Come en local</option>\n                <option value=\"1\">Para llevar</option>\n            </select>\n        </div>\n        <div class=\"row form-group\">\n            <div class=\"col\">\n                <label class=\"text-justify text-center\" for=\"total\">Total:</label>\n            </div>\n            <div class=\"col input-group\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\n                <input name=\"total\" #total=\"ngModel\" [(ngModel)]=\"service.formData.total\" class=\"form-control\" readonly>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- items table -->\n    <table class=\"table table-borderless\">\n        <thead class=\"thead\">\n            <th>Item</th>\n            <th>Precio</th>\n            <th>Cantidad</th>\n            <th>Total</th>\n            <th><a (click)=\"addEditItem(null,service.formData.id)\" class=\"btn btn-success\">+</a></th>\n        </thead>\n        <tbody>\n            <!-- display if no items -->\n            <tr *ngIf=\"service.orderItems.length == 0\">\n                <td colspan=\"4\">No hay ítems en esta orden.</td>\n            </tr>\n            \n            <tr *ngFor=\"let item of service.orderItems; let i = index;\">\n                <td>{{ item.itemName }}</td>\n                <td>{{ item.price }}</td>\n                <td>{{ item.amount }}</td>\n                <td>{{ item.total }}</td>\n                <th><a (click)=\"addEditItem(i,service.formData.id)\" class=\"btn btn-warning\">Edit</a></th>\n            </tr>\n        </tbody>\n    </table>\n\n    <div class=\"form-group\">\n        <button type=\"button\" class=\"btn btn-danger float-left\">Cancelar</button>\n        <button type=\"submit\" class=\"btn btn-success float-right\"><b>Aceptar</b></button>\n    </div>\n</form>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../shared/order.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styles: [\n  ]\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor( ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Order } from './order';\nimport { OrderItem } from './order-item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  formData: Order;\n  orderItems: OrderItem[];\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}